---
description:
globs:
alwaysApply: false
---

Always read `prd-*.md` files in /task folder at the start of a new conversation to understand the project's architecture, goals, style, and constraints.
Check tasks files at /task folder before starting a new task. If the task isn’t listed, add it with a brief description and today's date.
Use consistent naming conventions, file structure, and architecture patterns as described in PLANNING.md.

Code Structure & Modularity
Never create a file longer than 500 lines of code. If a file approaches this limit, refactor by splitting it into modules or helper files.
Organize code into clearly separated modules, grouped by feature or responsibility. 

For agents this looks like:
agent.* - Main agent definition and execution logic
tools.* - Tool functions used by the agent
prompts.* - System prompts
Use clear, consistent imports (prefer relative imports within packages).
Use clear, consistent imports (prefer relative imports within packages).
Use python_dotenv and load_env() for environment variables if use python programming language.


Testing & Reliability
Always create Pytest unit tests for new features (functions, classes, routes, etc).
After updating any logic, check whether existing unit tests need to be updated. If so, do it.
Tests should live in a /tests folder mirroring the main app structure.
Include at least:
1 test for expected use
1 edge case
1 failure case

✅ Task Completion
Mark completed tasks in TASK.md immediately after finishing them.
Add new sub-tasks or TODOs discovered during development to /tasks/task*.md under a “Discovered During Work” section.


1. Regularly update the task list file after finishing any significant work.
2. Follow the completion protocol:
   - Mark each finished **sub‑task** `[x]`.
   - Mark the **parent task** `[x]` once **all** its subtasks are `[x]`.
3. Add newly discovered tasks.
4. Keep “Relevant Files” accurate and up to date.
5. Before starting work, check which sub‑task is next.
6. After implementing a sub‑task, update the file and then pause for user approval.